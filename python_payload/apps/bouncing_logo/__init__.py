from st3m.application import Application
import math, random

logo = ""


class App(Application):
    def __init__(self, app_ctx):
        super().__init__(app_ctx)
        self.x = 23
        self.y = 42
        self.x2 = 23
        self.y2 = 42
        self.angle = 0.3
        self.angle2 = 0.3
        self.bounces = 0
        self.x_vel = math.cos(self.angle) * 20
        self.y_vel = math.sin(self.angle) * 20
        self.color = [0, 1, 0, 1]

    def think(self, ins, delta_ms):
        super().think(ins, delta_ms)
        self.x2 += (delta_ms / 1000.0) * self.x_vel
        self.y2 += (delta_ms / 1000.0) * self.y_vel


    def draw(self, ctx: Context):
        ctx.rectangle(-120, -120, 240, 240)
        ctx.gray(0)
        ctx.fill()
        ctx.rgb(self.color[0], self.color[1], self.color[2])
        ctx.save()
        ctx.translate(self.x, self.y)
        if self.bounces > 23 and self.bounces < 42:
            ctx.logo(0, 0, 100)
        else:
            ctx.scale(1.4, 1.4)
            ctx.parse(logo)
            ctx.fill()
        ctx.restore()
        ctx.save()
        ctx.translate(self.x2, self.y2)
        ctx.logo(0, 0, 100)
        ctx.restore()

        self.x += (self.delta_ms / 1000.0) * self.x_vel
        self.y += (self.delta_ms / 1000.0) * self.y_vel

        if self.x**2 + self.y**2 > 80**2:
            self.angle -= 3.1415 / 4
            self.bounces += 1
            self.color = [
                random.getrandbits(8) / 255,
                random.getrandbits(8) / 255,
                random.getrandbits(8) / 255,
            ]
            self.x_vel = math.cos(self.angle) * 20
            self.y_vel = math.sin(self.angle) * 20
            self.x += (self.delta_ms / 1000.0) * self.x_vel
            self.y += (self.delta_ms / 1000.0) * self.y_vel


logo = """
M -4.39,21.0C -13.0,20.74-21.8,20.50-30.24,18.44c -2.06,-0.029-5.183,-2.60-1.80,-3.58 6.09,-2.134 12.64,-2.393 19.03,-2.89 12.548,-0.57 25.21,-0.55 37.64,1.412 2.318109,0.772622 6.558698,0.531727 7.222375,3.303501 -1.799796,1.866681 -4.68191,1.987769 -7.083554,2.575122 -9.627697,1.599463 -19.4280165,1.801587 -29.1667865,1.750578 z m 21.1649605,-2.09674 c 2.689888,-0.288701 3.169323,-4.219484 0.367621,-4.770404 -2.211824,-0.974917 -6.652931,0.346831 -5.302687,3.349691 1.02277,1.650128 3.225326,1.709774 4.935066,1.420713 z m -1.83912,-1.12842 c -4.050965,-1.101076 1.59453,-4.578685 2.30991,-1.38595 -0.04312,1.111127 -1.381541,1.54678 -2.30991,1.38595 z m -30.30198,-1.22472 c 1.084356,-1.449364 2.209959,-3.153739 -0.380367,-2.56876 -0.822946,0.827977 -1.527075,4.186302 -2.373479,1.791318 0.0023,-1.462655 -2.487091,-2.401356 -2.791289,-1.499251 0.914198,1.551714 1.829208,3.102949 2.747165,4.652443 1.038463,0.215555 1.747199,-0.149658 2.081248,-1.174836 0.238907,-0.400305 0.477815,-0.800609 0.716722,-1.200914 z m 6.3632695,-0.0965 c -0.19542,-0.730012 0.397045,-2.247909 -0.304036,-2.47226 -1.1787585,-0.221061 -1.8229455,0.09245 -1.5049335,1.36816 0,1.19212 0,2.38424 0,3.57636 0.9449245,-0.01277 2.2451555,0.32976 1.8089695,-1.064124 0,-0.469379 0,-0.938757 0,-1.408136 z m 7.47616,2.32614 c 3.27423,-0.37857 2.640815,-4.895389 -0.53544,-4.737974 -0.79575,0.40364 -3.266732,-0.836051 -3.14188,0.535175 0,1.453876 0,2.907753 0,4.361629 1.22481,-0.04654 2.46367,0.02561 3.67732,-0.15883 z m -1.86835,-2.32614 c -0.908622,-2.294472 3.05048904,-1.318367 2.197874,0.536251 -0.959592,1.089221 -2.738816,1.301324 -2.197874,-0.536251 z m 11.56459,1.9145 c 0.230214,-1.18971 -1.740324,-0.157417 -2.09762,-0.742788 -0.272757,-1.145721 1.316261,-0.429667 1.98987,-0.629022 0.392824,-1.288954 -0.651654,-1.140607 -1.603011,-1.08538 -1.170314,-0.400101 0.289338,-1.131279 1.109297,-0.804773 1.1226,0.162843 0.699978,-1.765637 -0.44536,-1.124797 -0.953279,0 -1.906557,0 -2.859836,0 0,1.648173 0,3.296347 0,4.94452 1.307987,0 2.615973,0 3.92396,0 -0.0058,-0.18592 -0.01153,-0.37184 -0.0173,-0.55776 z M -4.1495145,3.0300213 c -1.077159,-2.95988297 -2.084427,-5.9516488 -3.203127,-8.8924768 -0.284536,1.366682 0.942907,4.182532 -0.334981,5.94639783 -2.12164,4.92335597 -7.7629585,6.62137997 -12.6322345,7.30422997 -3.826025,0.455582 -7.699051,0.241441 -11.543637,0.229559 0.924272,-4.03759 1.870297,-8.07017197 2.80642,-12.1050298 2.239113,0.01542 4.486442,-0.08591 6.71889,0.0421 -0.615279,2.772069 -1.250146,5.5399868 -1.903,8.3034498 3.436952,0.152385 7.711408,-0.49836 9.679569,-3.68587797 1.673287,-2.45478383 -0.210835,-5.44527083 -2.993838,-5.66677383 -3.650709,-0.751647 -7.412809,-0.204652 -11.099661,-0.485278 0.590319,-0.99815 0.296834,-3.105303 1.222136,-3.66317 8.388124,0 16.776249,0 25.1643735,0 1.243965,3.758681 2.41403704,7.541761 3.68278,11.2921598 2.994445,-3.7104508 5.856601,-7.5259638 8.7789605,-11.2933998 5.486197,0.07133 10.985969,-0.116997 16.46164,0.17299 3.397077,0.601893 7.709149,1.588868 8.91872,5.30855 1.102733,4.29565283 -2.5464,8.3000188 -6.318124,9.7836578 -5.745662,2.514398 -12.134528,2.047739 -18.246226,1.996702 0.924047,-4.037583 1.869793,-8.07017197 2.80566,-12.1050298 2.239547,0.01167 4.484599,-0.07756 6.71962,0.0363 -0.615971,2.773823 -1.250696,5.5436628 -1.90278,8.3092198 3.470299,0.146181 7.760945,-0.507496 9.713334,-3.75589497 1.871928,-2.82228183 -0.823164,-5.67486183 -3.726984,-5.73955483 -3.458323,-0.461391 -6.964092,-0.197381 -10.44512,-0.26102 C 9.0872625,-0.07091767 4.0098085,5.7634783 -1.0853145,11.582411 c -1.030401,-2.8475327 -2.044397,-5.7010837 -3.0642,-8.5523897 z
"""

if __name__ == "__main__":
    from st3m.run import run_app

    run_app(App)
