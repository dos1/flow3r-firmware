stages:
  - check
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

default:
  # built via:
  #     docker load < $(nix-build nix/docker-image.nix)
  image: registry.k0.hswaw.net/q3k/flow3r-build:krgzk4xwf485pi8xn6g12vfccvyc38aj

clang-tidy:
  stage: check
  script:
    - "bash tools/clang-tidy.sh"
    - "python3 tools/codequal-report.py clang-tidy warnings.txt > cqual.json"
  artifacts:
    when: always
    reports:
      codequality: cqual.json

mypy:
  stage: check
  variables:
    MYPYPATH: python_payload/mypystubs
  script:
    - "set +e +o pipefail"
    - "bash tools/mypy.sh; result=$?"
    - "python3 tools/codequal-report.py mypy warnings.txt > cqual.json"
    - "set -e -o pipefail"
    - "[ $result == 0 ]"
  artifacts:
    when: always
    reports:
      codequality: cqual.json

format:
  stage: check
  script:
    - "git clean -fdx"
    - "bash tools/format.sh"
    - "[ -z \"$(git status --porcelain)\" ] || (echo 'Differences found, please run tools/format.sh.' && git diff HEAD && exit 1)"

build:
  stage: build
  script:
    - idf.py -g c23 build
  artifacts:
    expose_as: 'C23 ELF'
    paths: ['build/flow3r.elf']
    expire_in: 5 hours

simulate:
  stage: build
  script:
    - python3 sim/run.py screenshot
  artifacts:
    expose_as: 'Smulator Screenshot'
    paths: ['flow3r.png']
    expire_in: 5 hours

pages:
  stage: deploy
  only:
    - main
  script:
    - cd docs
    - make html
    - mv _build/html ../public
  artifacts:
    paths: ['public']
    expire_in: 1d

dist:
  stage: deploy
  only:
    - /^release\/[0-9]+\.[0-9]+\.[0-9]+.*$/
  script:
    - bash tools/dist.sh
  artifacts:
    paths: ['dist']
