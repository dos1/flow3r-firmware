stages:
  - check
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CACHIX_CACHE_NAME: flow3r
  BUILD_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/flow3r-build:${CI_COMMIT_SHA}

default:
  # FIXME: eventually use image built by the pipeline
  #image: $BUILD_IMAGE_NAME
  image: registry.k0.hswaw.net/q3k/flow3r-build:ymrsh8w1z9l89qvvksw52k7sl54lx73q

nix-deps:
  image: docker.nix-community.org/nixpkgs/nix-flakes
  stage: .pre
  script:
    - set +e +o pipefail
    # cache development environment
    - nix run .#build-and-cache -- devShell
    # build docker image and cache if not already in cache
    - nix run .#build-and-cache -- dockerImage
    # push docker image
    # FIXME: disabled because the gitlab registry is broken
    #- |
    #  echo "${CI_REGISTRY_PASSWORD}" \
    #    | skopeo login --username="${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
    #- skopeo copy --tmpdir /tmp --insecure-policy "docker-archive://${PWD}/result" "docker://${BUILD_IMAGE_NAME}"

clang-tidy:
  stage: check
  script:
    - "bash tools/clang-tidy.sh"
    - "python3 tools/codequal-report.py clang-tidy warnings.txt > cqual.json"
  artifacts:
    when: always
    reports:
      codequality: cqual.json

mypy:
  stage: check
  variables:
    MYPYPATH: python_payload/mypystubs
  script:
    - "set +e +o pipefail"
    - "bash tools/mypy.sh; result=$?"
    - "python3 tools/codequal-report.py mypy warnings.txt > cqual.json"
    - "set -e -o pipefail"
    - "[ $result == 0 ]"
  artifacts:
    when: always
    reports:
      codequality: cqual.json

format:
  stage: check
  script:
    - "git clean -fdx"
    - "bash tools/format.sh"
    - "[ -z \"$(git status --porcelain)\" ] || (echo 'Differences found, please run tools/format.sh.' && git diff HEAD && exit 1)"

build:
  stage: build
  script:
    - idf.py -g c23 build
  artifacts:
    expose_as: 'C23 ELF'
    paths: ['build/flow3r.elf']
    expire_in: 5 hours

simulate:
  stage: build
  script:
    - python3 sim/run.py screenshot
  artifacts:
    expose_as: 'Simulator Screenshot'
    paths: ['flow3r.png']
    expire_in: 5 hours

pages:
  stage: deploy
  only:
    - main
  script:
    - cd docs
    - make html
    - mv _build/html ../public
  artifacts:
    paths: ['public']
    expire_in: 1d

dist:
  stage: deploy
  variables:
    # Force a full clone to make version machinery work.
    GIT_STRATEGY: clone
  only:
    - /^v\/[0-9]+\.[0-9]+\.[0-9]+.*$/
    - /^release\/[0-9]+\.[0-9]+\.[0-9]+$/
    - tags
  script:
    - bash tools/dist.sh
  artifacts:
    paths: ['dist']
